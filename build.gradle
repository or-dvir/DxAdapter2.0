// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.72'

    ext {
        version_recyclerView = '1.1.0'
        version_idlingResource = '3.2.0'
    }

    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

subprojects {
    ////////////////////////////////////
    //NOTE: the order in this block matters. do not change it!
    if (this.name == 'app') {
        apply plugin: 'com.android.application'
    } else {
        apply plugin: 'com.android.library'
    }

//    if (this.name != 'app') {
//        apply plugin: 'com.android.library'
//    }

    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    ////////////////////////////////////

    android {
        compileSdkVersion 29
        buildToolsVersion "29.0.2"

        defaultConfig {
            if (this.name == 'app') {
                applicationId "com.hotmail.or_dvir.dxLibraries"
            }

            minSdkVersion 21
            targetSdkVersion 29
            versionCode 1
            versionName "1.0"

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            consumerProguardFiles 'consumer-rules.pro'
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
    }

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        implementation 'androidx.core:core-ktx:1.3.0'

        if (this.name != 'dxadapter' &&
                this.name != 'dxcountingidlingresource' &&
                this.name != 'dxrecyclerview') {
            //todo when exported to a library,
            //todo do i need to change this line to import the library instead of the project
            //todo or is it ok to leave it like this???
            //todo change implementation to api???
            implementation project(':dxadapter')
        }
    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
